{
  "header_types" : [
    {
      "name" : "scalars_0",
      "id" : 0,
      "fields" : [
        ["tmp", 32, false],
        ["tmp_0", 32, false],
        ["tmp_1", 16, false],
        ["tmp_2", 16, false],
        ["tmp_3", 8, false],
        ["tmp_4", 32, false],
        ["tmp_5", 32, false],
        ["tmp_6", 16, false],
        ["tmp_7", 16, false],
        ["tmp_8", 8, false],
        ["tmp_9", 32, false],
        ["tmp_10", 32, false],
        ["tmp_11", 16, false],
        ["tmp_12", 16, false],
        ["tmp_13", 8, false],
        ["tmp_14", 32, false],
        ["tmp_15", 32, false],
        ["tmp_16", 16, false],
        ["tmp_17", 16, false],
        ["tmp_18", 8, false],
        ["tmp_19", 32, false],
        ["tmp_20", 32, false],
        ["tmp_21", 16, false],
        ["tmp_22", 16, false],
        ["tmp_23", 8, false],
        ["tmp_24", 32, false],
        ["tmp_25", 32, false],
        ["tmp_26", 16, false],
        ["tmp_27", 16, false],
        ["tmp_28", 8, false],
        ["userMetadata.index_reg0", 32, false],
        ["userMetadata.index_reg1", 32, false],
        ["userMetadata.index_reg2", 32, false],
        ["userMetadata.value_reg0", 64, false],
        ["userMetadata.value_reg1", 64, false],
        ["userMetadata.value_reg2", 64, false],
        ["userMetadata.value_min", 64, false],
        ["userMetadata.value_priority", 3, false],
        ["_padding_0", 5, false]
      ]
    },
    {
      "name" : "standard_metadata",
      "id" : 1,
      "fields" : [
        ["ingress_port", 9, false],
        ["egress_spec", 9, false],
        ["egress_port", 9, false],
        ["instance_type", 32, false],
        ["packet_length", 32, false],
        ["enq_timestamp", 32, false],
        ["enq_qdepth", 19, false],
        ["deq_timedelta", 32, false],
        ["deq_qdepth", 19, false],
        ["qid", 5, false],
        ["priority", 3, false],
        ["ingress_global_timestamp", 48, false],
        ["egress_global_timestamp", 48, false],
        ["mcast_grp", 16, false],
        ["egress_rid", 16, false],
        ["checksum_error", 1, false],
        ["parser_error", 32, false],
        ["_padding", 6, false]
      ]
    },
    {
      "name" : "ethernet_t",
      "id" : 2,
      "fields" : [
        ["dstAddr", 48, false],
        ["srcAddr", 48, false],
        ["etherType", 16, false]
      ]
    },
    {
      "name" : "ipv4_t",
      "id" : 3,
      "fields" : [
        ["version", 4, false],
        ["ihl", 4, false],
        ["dscp", 6, false],
        ["ecn", 2, false],
        ["totalLen", 16, false],
        ["identification", 16, false],
        ["flags", 3, false],
        ["fragOffset", 13, false],
        ["ttl", 8, false],
        ["protocol", 8, false],
        ["hdrChecksum", 16, false],
        ["srcAddr", 32, false],
        ["dstAddr", 32, false]
      ]
    },
    {
      "name" : "tcp_t",
      "id" : 4,
      "fields" : [
        ["srcPort", 16, false],
        ["dstPort", 16, false],
        ["seqNo", 32, false],
        ["ackNo", 32, false],
        ["dataOffset", 4, false],
        ["res", 4, false],
        ["cwr", 1, false],
        ["ece", 1, false],
        ["urg", 1, false],
        ["ack", 1, false],
        ["psh", 1, false],
        ["rst", 1, false],
        ["syn", 1, false],
        ["fin", 1, false],
        ["window", 16, false],
        ["checksum", 16, false],
        ["urgentPtr", 16, false]
      ]
    }
  ],
  "headers" : [
    {
      "name" : "scalars",
      "id" : 0,
      "header_type" : "scalars_0",
      "metadata" : true,
      "pi_omit" : true
    },
    {
      "name" : "standard_metadata",
      "id" : 1,
      "header_type" : "standard_metadata",
      "metadata" : true,
      "pi_omit" : true
    },
    {
      "name" : "ethernet",
      "id" : 2,
      "header_type" : "ethernet_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "ipv4",
      "id" : 3,
      "header_type" : "ipv4_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "tcp",
      "id" : 4,
      "header_type" : "tcp_t",
      "metadata" : false,
      "pi_omit" : true
    }
  ],
  "header_stacks" : [],
  "header_union_types" : [],
  "header_unions" : [],
  "header_union_stacks" : [],
  "field_lists" : [
    {
      "id" : 1,
      "name" : "field_list0",
      "elements" : [
        {
          "type" : "field",
          "value" : ["scalars", "userMetadata.index_reg0"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "userMetadata.index_reg1"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "userMetadata.index_reg2"]
        }
      ]
    }
  ],
  "errors" : [
    ["NoError", 0],
    ["PacketTooShort", 1],
    ["NoMatch", 2],
    ["StackOutOfBounds", 3],
    ["HeaderTooShort", 4],
    ["ParserTimeout", 5],
    ["ParserInvalidArgument", 6]
  ],
  "enums" : [],
  "parsers" : [
    {
      "name" : "parser",
      "id" : 0,
      "init_state" : "start",
      "parse_states" : [
        {
          "name" : "start",
          "id" : 0,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "ethernet"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x0800",
              "mask" : null,
              "next_state" : "parse_ipv4"
            },
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : [
            {
              "type" : "field",
              "value" : ["ethernet", "etherType"]
            }
          ]
        },
        {
          "name" : "parse_ipv4",
          "id" : 1,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "ipv4"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x06",
              "mask" : null,
              "next_state" : "parse_tcp"
            },
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : [
            {
              "type" : "field",
              "value" : ["ipv4", "protocol"]
            }
          ]
        },
        {
          "name" : "parse_tcp",
          "id" : 2,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "tcp"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : []
        }
      ]
    }
  ],
  "parse_vsets" : [],
  "deparsers" : [
    {
      "name" : "deparser",
      "id" : 0,
      "source_info" : {
        "filename" : "include/parsers.p4",
        "line" : 43,
        "column" : 8,
        "source_fragment" : "MyDeparser"
      },
      "order" : ["ethernet", "ipv4", "tcp"],
      "primitives" : []
    }
  ],
  "meter_arrays" : [],
  "counter_arrays" : [],
  "register_arrays" : [
    {
      "name" : "MyIngress.reg0",
      "id" : 0,
      "source_info" : {
        "filename" : "test.p4",
        "line" : 53,
        "column" : 27,
        "source_fragment" : "reg0"
      },
      "size" : 100,
      "bitwidth" : 64
    },
    {
      "name" : "MyIngress.reg1",
      "id" : 1,
      "source_info" : {
        "filename" : "test.p4",
        "line" : 54,
        "column" : 27,
        "source_fragment" : "reg1"
      },
      "size" : 100,
      "bitwidth" : 64
    },
    {
      "name" : "MyIngress.reg2",
      "id" : 2,
      "source_info" : {
        "filename" : "test.p4",
        "line" : 55,
        "column" : 27,
        "source_fragment" : "reg2"
      },
      "size" : 100,
      "bitwidth" : 64
    },
    {
      "name" : "MyEgress.reg0",
      "id" : 3,
      "source_info" : {
        "filename" : "test.p4",
        "line" : 166,
        "column" : 27,
        "source_fragment" : "reg0"
      },
      "size" : 100,
      "bitwidth" : 64
    },
    {
      "name" : "MyEgress.reg1",
      "id" : 4,
      "source_info" : {
        "filename" : "test.p4",
        "line" : 167,
        "column" : 27,
        "source_fragment" : "reg1"
      },
      "size" : 100,
      "bitwidth" : 64
    },
    {
      "name" : "MyEgress.reg2",
      "id" : 5,
      "source_info" : {
        "filename" : "test.p4",
        "line" : 168,
        "column" : 27,
        "source_fragment" : "reg2"
      },
      "size" : 100,
      "bitwidth" : 64
    }
  ],
  "calculations" : [
    {
      "name" : "calc",
      "id" : 0,
      "algo" : "crc32",
      "input" : [
        {
          "type" : "field",
          "value" : ["scalars", "tmp"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_0"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_1"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_2"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_3"]
        }
      ]
    },
    {
      "name" : "calc_0",
      "id" : 1,
      "algo" : "crc16",
      "input" : [
        {
          "type" : "field",
          "value" : ["scalars", "tmp_4"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_5"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_6"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_7"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_8"]
        }
      ]
    },
    {
      "name" : "calc_1",
      "id" : 2,
      "algo" : "identity",
      "input" : [
        {
          "type" : "field",
          "value" : ["scalars", "tmp_9"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_10"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_11"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_12"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_13"]
        }
      ]
    },
    {
      "name" : "calc_2",
      "id" : 3,
      "algo" : "crc32",
      "input" : [
        {
          "type" : "field",
          "value" : ["scalars", "tmp_14"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_15"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_16"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_17"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_18"]
        }
      ]
    },
    {
      "name" : "calc_3",
      "id" : 4,
      "algo" : "crc16",
      "input" : [
        {
          "type" : "field",
          "value" : ["scalars", "tmp_19"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_20"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_21"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_22"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_23"]
        }
      ]
    },
    {
      "name" : "calc_4",
      "id" : 5,
      "algo" : "identity",
      "input" : [
        {
          "type" : "field",
          "value" : ["scalars", "tmp_24"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_25"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_26"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_27"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_28"]
        }
      ]
    }
  ],
  "learn_lists" : [],
  "actions" : [
    {
      "name" : "NoAction",
      "id" : 0,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "MyIngress.drop",
      "id" : 1,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "mark_to_drop",
          "parameters" : [
            {
              "type" : "header",
              "value" : "standard_metadata"
            }
          ],
          "source_info" : {
            "filename" : "test.p4",
            "line" : 58,
            "column" : 8,
            "source_fragment" : "mark_to_drop(standard_metadata)"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.sketch_count",
      "id" : 2,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp"]
            },
            {
              "type" : "field",
              "value" : ["ipv4", "srcAddr"]
            }
          ],
          "source_info" : {
            "filename" : "test.p4",
            "line" : 62,
            "column" : 64,
            "source_fragment" : "hdr.ipv4.srcAddr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_0"]
            },
            {
              "type" : "field",
              "value" : ["ipv4", "dstAddr"]
            }
          ],
          "source_info" : {
            "filename" : "test.p4",
            "line" : 62,
            "column" : 82,
            "source_fragment" : "hdr.ipv4.dstAddr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_1"]
            },
            {
              "type" : "field",
              "value" : ["tcp", "srcPort"]
            }
          ],
          "source_info" : {
            "filename" : "test.p4",
            "line" : 62,
            "column" : 100,
            "source_fragment" : "hdr.tcp.srcPort"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_2"]
            },
            {
              "type" : "field",
              "value" : ["tcp", "dstPort"]
            }
          ],
          "source_info" : {
            "filename" : "test.p4",
            "line" : 62,
            "column" : 117,
            "source_fragment" : "hdr.tcp.dstPort"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_3"]
            },
            {
              "type" : "field",
              "value" : ["ipv4", "protocol"]
            }
          ],
          "source_info" : {
            "filename" : "test.p4",
            "line" : 62,
            "column" : 134,
            "source_fragment" : "hdr.ipv4.protocol"
          }
        },
        {
          "op" : "modify_field_with_hash_based_offset",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.index_reg0"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0000"
            },
            {
              "type" : "calculation",
              "value" : "calc"
            },
            {
              "type" : "hexstr",
              "value" : "0x00000064"
            }
          ],
          "source_info" : {
            "filename" : "test.p4",
            "line" : 62,
            "column" : 8,
            "source_fragment" : "hash(meta.index_reg0, HashAlgorithm.crc32, (bit<16>)0, {hdr.ipv4.srcAddr, hdr.ipv4.dstAddr, hdr.tcp.srcPort, hdr.tcp.dstPort, hdr.ipv4.protocol}, (bit<32>)100)"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.value_reg0"]
            },
            {
              "type" : "register_array",
              "value" : "MyIngress.reg0"
            },
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.index_reg0"]
            }
          ],
          "source_info" : {
            "filename" : "test.p4",
            "line" : 62,
            "column" : 168,
            "source_fragment" : "reg0.read(meta.value_reg0, meta.index_reg0)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.value_reg0"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata.value_reg0"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x0000000000000001"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffffffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "test.p4",
            "line" : 62,
            "column" : 213,
            "source_fragment" : "meta.value_reg0 = meta.value_reg0 + 1"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "MyIngress.reg0"
            },
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.index_reg0"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.value_reg0"]
            }
          ],
          "source_info" : {
            "filename" : "test.p4",
            "line" : 62,
            "column" : 252,
            "source_fragment" : "reg0.write(meta.index_reg0, meta.value_reg0)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_4"]
            },
            {
              "type" : "field",
              "value" : ["ipv4", "srcAddr"]
            }
          ],
          "source_info" : {
            "filename" : "test.p4",
            "line" : 63,
            "column" : 64,
            "source_fragment" : "hdr.ipv4.srcAddr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_5"]
            },
            {
              "type" : "field",
              "value" : ["ipv4", "dstAddr"]
            }
          ],
          "source_info" : {
            "filename" : "test.p4",
            "line" : 63,
            "column" : 82,
            "source_fragment" : "hdr.ipv4.dstAddr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_6"]
            },
            {
              "type" : "field",
              "value" : ["tcp", "srcPort"]
            }
          ],
          "source_info" : {
            "filename" : "test.p4",
            "line" : 63,
            "column" : 100,
            "source_fragment" : "hdr.tcp.srcPort"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_7"]
            },
            {
              "type" : "field",
              "value" : ["tcp", "dstPort"]
            }
          ],
          "source_info" : {
            "filename" : "test.p4",
            "line" : 63,
            "column" : 117,
            "source_fragment" : "hdr.tcp.dstPort"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_8"]
            },
            {
              "type" : "field",
              "value" : ["ipv4", "protocol"]
            }
          ],
          "source_info" : {
            "filename" : "test.p4",
            "line" : 63,
            "column" : 134,
            "source_fragment" : "hdr.ipv4.protocol"
          }
        },
        {
          "op" : "modify_field_with_hash_based_offset",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.index_reg1"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0000"
            },
            {
              "type" : "calculation",
              "value" : "calc_0"
            },
            {
              "type" : "hexstr",
              "value" : "0x00000064"
            }
          ],
          "source_info" : {
            "filename" : "test.p4",
            "line" : 63,
            "column" : 8,
            "source_fragment" : "hash(meta.index_reg1, HashAlgorithm.crc16, (bit<16>)0, {hdr.ipv4.srcAddr, hdr.ipv4.dstAddr, hdr.tcp.srcPort, hdr.tcp.dstPort, hdr.ipv4.protocol}, (bit<32>)100)"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.value_reg1"]
            },
            {
              "type" : "register_array",
              "value" : "MyIngress.reg1"
            },
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.index_reg1"]
            }
          ],
          "source_info" : {
            "filename" : "test.p4",
            "line" : 63,
            "column" : 168,
            "source_fragment" : "reg1.read(meta.value_reg1, meta.index_reg1)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.value_reg1"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata.value_reg1"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x0000000000000001"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffffffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "test.p4",
            "line" : 63,
            "column" : 213,
            "source_fragment" : "meta.value_reg1 = meta.value_reg1 + 1"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "MyIngress.reg1"
            },
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.index_reg1"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.value_reg1"]
            }
          ],
          "source_info" : {
            "filename" : "test.p4",
            "line" : 63,
            "column" : 252,
            "source_fragment" : "reg1.write(meta.index_reg1, meta.value_reg1)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_9"]
            },
            {
              "type" : "field",
              "value" : ["ipv4", "srcAddr"]
            }
          ],
          "source_info" : {
            "filename" : "test.p4",
            "line" : 64,
            "column" : 67,
            "source_fragment" : "hdr.ipv4.srcAddr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_10"]
            },
            {
              "type" : "field",
              "value" : ["ipv4", "dstAddr"]
            }
          ],
          "source_info" : {
            "filename" : "test.p4",
            "line" : 64,
            "column" : 85,
            "source_fragment" : "hdr.ipv4.dstAddr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_11"]
            },
            {
              "type" : "field",
              "value" : ["tcp", "srcPort"]
            }
          ],
          "source_info" : {
            "filename" : "test.p4",
            "line" : 64,
            "column" : 103,
            "source_fragment" : "hdr.tcp.srcPort"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_12"]
            },
            {
              "type" : "field",
              "value" : ["tcp", "dstPort"]
            }
          ],
          "source_info" : {
            "filename" : "test.p4",
            "line" : 64,
            "column" : 120,
            "source_fragment" : "hdr.tcp.dstPort"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_13"]
            },
            {
              "type" : "field",
              "value" : ["ipv4", "protocol"]
            }
          ],
          "source_info" : {
            "filename" : "test.p4",
            "line" : 64,
            "column" : 137,
            "source_fragment" : "hdr.ipv4.protocol"
          }
        },
        {
          "op" : "modify_field_with_hash_based_offset",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.index_reg2"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0000"
            },
            {
              "type" : "calculation",
              "value" : "calc_1"
            },
            {
              "type" : "hexstr",
              "value" : "0x00000064"
            }
          ],
          "source_info" : {
            "filename" : "test.p4",
            "line" : 64,
            "column" : 8,
            "source_fragment" : "hash(meta.index_reg2, HashAlgorithm.identity, (bit<16>)0, {hdr.ipv4.srcAddr, hdr.ipv4.dstAddr, hdr.tcp.srcPort, hdr.tcp.dstPort, hdr.ipv4.protocol}, (bit<32>)100)"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.value_reg2"]
            },
            {
              "type" : "register_array",
              "value" : "MyIngress.reg2"
            },
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.index_reg2"]
            }
          ],
          "source_info" : {
            "filename" : "test.p4",
            "line" : 64,
            "column" : 171,
            "source_fragment" : "reg2.read(meta.value_reg2, meta.index_reg2)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.value_reg2"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata.value_reg2"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x0000000000000001"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffffffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "test.p4",
            "line" : 64,
            "column" : 216,
            "source_fragment" : "meta.value_reg2 = meta.value_reg2 + 1"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "MyIngress.reg2"
            },
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.index_reg2"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.value_reg2"]
            }
          ],
          "source_info" : {
            "filename" : "test.p4",
            "line" : 64,
            "column" : 255,
            "source_fragment" : "reg2.write(meta.index_reg2, meta.value_reg2)"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.dequeue_count",
      "id" : 3,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.value_reg0"]
            },
            {
              "type" : "register_array",
              "value" : "MyIngress.reg0"
            },
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.index_reg0"]
            }
          ],
          "source_info" : {
            "filename" : "test.p4",
            "line" : 68,
            "column" : 8,
            "source_fragment" : "reg0.read(meta.value_reg0, meta.index_reg0)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.value_reg0"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata.value_reg0"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xfffffffffffffff6"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffffffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "test.p4",
            "line" : 68,
            "column" : 53,
            "source_fragment" : "meta.value_reg0 = meta.value_reg0 - 10"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "MyIngress.reg0"
            },
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.index_reg0"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.value_reg0"]
            }
          ],
          "source_info" : {
            "filename" : "test.p4",
            "line" : 68,
            "column" : 93,
            "source_fragment" : "reg0.write(meta.index_reg0, meta.value_reg0)"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.value_reg1"]
            },
            {
              "type" : "register_array",
              "value" : "MyIngress.reg1"
            },
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.index_reg1"]
            }
          ],
          "source_info" : {
            "filename" : "test.p4",
            "line" : 69,
            "column" : 8,
            "source_fragment" : "reg1.read(meta.value_reg1, meta.index_reg1)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.value_reg1"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata.value_reg1"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xfffffffffffffff6"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffffffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "test.p4",
            "line" : 69,
            "column" : 53,
            "source_fragment" : "meta.value_reg1 = meta.value_reg1 - 10"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "MyIngress.reg1"
            },
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.index_reg1"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.value_reg1"]
            }
          ],
          "source_info" : {
            "filename" : "test.p4",
            "line" : 69,
            "column" : 93,
            "source_fragment" : "reg1.write(meta.index_reg1, meta.value_reg1)"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.value_reg2"]
            },
            {
              "type" : "register_array",
              "value" : "MyIngress.reg2"
            },
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.index_reg2"]
            }
          ],
          "source_info" : {
            "filename" : "test.p4",
            "line" : 70,
            "column" : 8,
            "source_fragment" : "reg2.read(meta.value_reg2, meta.index_reg2)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.value_reg2"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata.value_reg2"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xfffffffffffffff6"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffffffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "test.p4",
            "line" : 70,
            "column" : 53,
            "source_fragment" : "meta.value_reg2 = meta.value_reg2 - 10"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "MyIngress.reg2"
            },
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.index_reg2"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.value_reg2"]
            }
          ],
          "source_info" : {
            "filename" : "test.p4",
            "line" : 70,
            "column" : 93,
            "source_fragment" : "reg2.write(meta.index_reg2, meta.value_reg2)"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.retrieve_min",
      "id" : 4,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.value_min"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "?",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata.value_reg0"]
                      },
                      "right" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata.value_min"]
                      },
                      "cond" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "<=",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "userMetadata.value_reg0"]
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["scalars", "userMetadata.value_reg2"]
                          }
                        }
                      }
                    }
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "userMetadata.value_min"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "<=",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata.value_reg0"]
                      },
                      "right" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata.value_reg1"]
                      }
                    }
                  }
                }
              }
            }
          ]
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.value_min"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "?",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata.value_reg1"]
                      },
                      "right" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata.value_min"]
                      },
                      "cond" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "<=",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "userMetadata.value_reg1"]
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["scalars", "userMetadata.value_reg2"]
                          }
                        }
                      }
                    }
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "userMetadata.value_min"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "<=",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata.value_reg1"]
                      },
                      "right" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata.value_reg0"]
                      }
                    }
                  }
                }
              }
            }
          ]
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.value_min"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "?",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata.value_reg2"]
                      },
                      "right" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata.value_min"]
                      },
                      "cond" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "<=",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "userMetadata.value_reg2"]
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["scalars", "userMetadata.value_reg1"]
                          }
                        }
                      }
                    }
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "userMetadata.value_min"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "<=",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata.value_reg2"]
                      },
                      "right" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata.value_reg0"]
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      ]
    },
    {
      "name" : "MyIngress.calculate_priority",
      "id" : 5,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.value_priority"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x00"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "userMetadata.value_priority"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "<",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata.value_min"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x0000000000000064"
                      }
                    }
                  }
                }
              }
            }
          ]
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.value_priority"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x01"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "userMetadata.value_priority"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : ">=",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "userMetadata.value_min"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x0000000000000064"
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "<",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "userMetadata.value_min"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00000000000000c8"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.value_priority"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x02"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "userMetadata.value_priority"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : ">=",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "userMetadata.value_min"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00000000000000c8"
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "<",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "userMetadata.value_min"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x000000000000012c"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.value_priority"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x03"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "userMetadata.value_priority"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : ">=",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "userMetadata.value_min"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x000000000000012c"
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "<",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "userMetadata.value_min"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x0000000000000190"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.value_priority"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x04"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "userMetadata.value_priority"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : ">=",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "userMetadata.value_min"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x0000000000000190"
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "<",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "userMetadata.value_min"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00000000000001f4"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.value_priority"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x05"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "userMetadata.value_priority"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : ">=",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "userMetadata.value_min"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00000000000001f4"
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "<",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "userMetadata.value_min"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x0000000000000258"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.value_priority"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x06"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "userMetadata.value_priority"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : ">=",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "userMetadata.value_min"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x0000000000000258"
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "<",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "userMetadata.value_min"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00000000000002bc"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.value_priority"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "hexstr",
                    "value" : "0x07"
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "userMetadata.value_priority"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "and",
                      "left" : {
                        "type" : "expression",
                        "value" : {
                          "op" : ">=",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "userMetadata.value_min"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x00000000000002bc"
                          }
                        }
                      },
                      "right" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "<",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "userMetadata.value_min"]
                          },
                          "right" : {
                            "type" : "hexstr",
                            "value" : "0x0000000000000320"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      ]
    },
    {
      "name" : "MyIngress.set_egress_port",
      "id" : 6,
      "runtime_data" : [
        {
          "name" : "egress_port",
          "bitwidth" : 9
        }
      ],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "test.p4",
            "line" : 128,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_spec = egress_port"
          }
        }
      ]
    },
    {
      "name" : "test149",
      "id" : 7,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "priority"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.value_priority"]
            }
          ],
          "source_info" : {
            "filename" : "test.p4",
            "line" : 149,
            "column" : 12,
            "source_fragment" : "standard_metadata.priority = meta.value_priority"
          }
        }
      ]
    },
    {
      "name" : "MyEgress.sketch_count",
      "id" : 8,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_14"]
            },
            {
              "type" : "field",
              "value" : ["ipv4", "srcAddr"]
            }
          ],
          "source_info" : {
            "filename" : "test.p4",
            "line" : 171,
            "column" : 64,
            "source_fragment" : "hdr.ipv4.srcAddr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_15"]
            },
            {
              "type" : "field",
              "value" : ["ipv4", "dstAddr"]
            }
          ],
          "source_info" : {
            "filename" : "test.p4",
            "line" : 171,
            "column" : 82,
            "source_fragment" : "hdr.ipv4.dstAddr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_16"]
            },
            {
              "type" : "field",
              "value" : ["tcp", "srcPort"]
            }
          ],
          "source_info" : {
            "filename" : "test.p4",
            "line" : 171,
            "column" : 100,
            "source_fragment" : "hdr.tcp.srcPort"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_17"]
            },
            {
              "type" : "field",
              "value" : ["tcp", "dstPort"]
            }
          ],
          "source_info" : {
            "filename" : "test.p4",
            "line" : 171,
            "column" : 117,
            "source_fragment" : "hdr.tcp.dstPort"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_18"]
            },
            {
              "type" : "field",
              "value" : ["ipv4", "protocol"]
            }
          ],
          "source_info" : {
            "filename" : "test.p4",
            "line" : 171,
            "column" : 134,
            "source_fragment" : "hdr.ipv4.protocol"
          }
        },
        {
          "op" : "modify_field_with_hash_based_offset",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.index_reg0"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0000"
            },
            {
              "type" : "calculation",
              "value" : "calc_2"
            },
            {
              "type" : "hexstr",
              "value" : "0x00000064"
            }
          ],
          "source_info" : {
            "filename" : "test.p4",
            "line" : 171,
            "column" : 8,
            "source_fragment" : "hash(meta.index_reg0, HashAlgorithm.crc32, (bit<16>)0, {hdr.ipv4.srcAddr, hdr.ipv4.dstAddr, hdr.tcp.srcPort, hdr.tcp.dstPort, hdr.ipv4.protocol}, (bit<32>)100)"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.value_reg0"]
            },
            {
              "type" : "register_array",
              "value" : "MyEgress.reg0"
            },
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.index_reg0"]
            }
          ],
          "source_info" : {
            "filename" : "test.p4",
            "line" : 171,
            "column" : 168,
            "source_fragment" : "reg0.read(meta.value_reg0, meta.index_reg0)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.value_reg0"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata.value_reg0"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x0000000000000001"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffffffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "test.p4",
            "line" : 171,
            "column" : 213,
            "source_fragment" : "meta.value_reg0 = meta.value_reg0 + 1"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "MyEgress.reg0"
            },
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.index_reg0"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.value_reg0"]
            }
          ],
          "source_info" : {
            "filename" : "test.p4",
            "line" : 171,
            "column" : 252,
            "source_fragment" : "reg0.write(meta.index_reg0, meta.value_reg0)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_19"]
            },
            {
              "type" : "field",
              "value" : ["ipv4", "srcAddr"]
            }
          ],
          "source_info" : {
            "filename" : "test.p4",
            "line" : 172,
            "column" : 64,
            "source_fragment" : "hdr.ipv4.srcAddr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_20"]
            },
            {
              "type" : "field",
              "value" : ["ipv4", "dstAddr"]
            }
          ],
          "source_info" : {
            "filename" : "test.p4",
            "line" : 172,
            "column" : 82,
            "source_fragment" : "hdr.ipv4.dstAddr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_21"]
            },
            {
              "type" : "field",
              "value" : ["tcp", "srcPort"]
            }
          ],
          "source_info" : {
            "filename" : "test.p4",
            "line" : 172,
            "column" : 100,
            "source_fragment" : "hdr.tcp.srcPort"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_22"]
            },
            {
              "type" : "field",
              "value" : ["tcp", "dstPort"]
            }
          ],
          "source_info" : {
            "filename" : "test.p4",
            "line" : 172,
            "column" : 117,
            "source_fragment" : "hdr.tcp.dstPort"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_23"]
            },
            {
              "type" : "field",
              "value" : ["ipv4", "protocol"]
            }
          ],
          "source_info" : {
            "filename" : "test.p4",
            "line" : 172,
            "column" : 134,
            "source_fragment" : "hdr.ipv4.protocol"
          }
        },
        {
          "op" : "modify_field_with_hash_based_offset",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.index_reg1"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0000"
            },
            {
              "type" : "calculation",
              "value" : "calc_3"
            },
            {
              "type" : "hexstr",
              "value" : "0x00000064"
            }
          ],
          "source_info" : {
            "filename" : "test.p4",
            "line" : 172,
            "column" : 8,
            "source_fragment" : "hash(meta.index_reg1, HashAlgorithm.crc16, (bit<16>)0, {hdr.ipv4.srcAddr, hdr.ipv4.dstAddr, hdr.tcp.srcPort, hdr.tcp.dstPort, hdr.ipv4.protocol}, (bit<32>)100)"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.value_reg1"]
            },
            {
              "type" : "register_array",
              "value" : "MyEgress.reg1"
            },
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.index_reg1"]
            }
          ],
          "source_info" : {
            "filename" : "test.p4",
            "line" : 172,
            "column" : 168,
            "source_fragment" : "reg1.read(meta.value_reg1, meta.index_reg1)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.value_reg1"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata.value_reg1"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x0000000000000001"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffffffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "test.p4",
            "line" : 172,
            "column" : 213,
            "source_fragment" : "meta.value_reg1 = meta.value_reg1 + 1"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "MyEgress.reg1"
            },
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.index_reg1"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.value_reg1"]
            }
          ],
          "source_info" : {
            "filename" : "test.p4",
            "line" : 172,
            "column" : 252,
            "source_fragment" : "reg1.write(meta.index_reg1, meta.value_reg1)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_24"]
            },
            {
              "type" : "field",
              "value" : ["ipv4", "srcAddr"]
            }
          ],
          "source_info" : {
            "filename" : "test.p4",
            "line" : 173,
            "column" : 67,
            "source_fragment" : "hdr.ipv4.srcAddr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_25"]
            },
            {
              "type" : "field",
              "value" : ["ipv4", "dstAddr"]
            }
          ],
          "source_info" : {
            "filename" : "test.p4",
            "line" : 173,
            "column" : 85,
            "source_fragment" : "hdr.ipv4.dstAddr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_26"]
            },
            {
              "type" : "field",
              "value" : ["tcp", "srcPort"]
            }
          ],
          "source_info" : {
            "filename" : "test.p4",
            "line" : 173,
            "column" : 103,
            "source_fragment" : "hdr.tcp.srcPort"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_27"]
            },
            {
              "type" : "field",
              "value" : ["tcp", "dstPort"]
            }
          ],
          "source_info" : {
            "filename" : "test.p4",
            "line" : 173,
            "column" : 120,
            "source_fragment" : "hdr.tcp.dstPort"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_28"]
            },
            {
              "type" : "field",
              "value" : ["ipv4", "protocol"]
            }
          ],
          "source_info" : {
            "filename" : "test.p4",
            "line" : 173,
            "column" : 137,
            "source_fragment" : "hdr.ipv4.protocol"
          }
        },
        {
          "op" : "modify_field_with_hash_based_offset",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.index_reg2"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0000"
            },
            {
              "type" : "calculation",
              "value" : "calc_4"
            },
            {
              "type" : "hexstr",
              "value" : "0x00000064"
            }
          ],
          "source_info" : {
            "filename" : "test.p4",
            "line" : 173,
            "column" : 8,
            "source_fragment" : "hash(meta.index_reg2, HashAlgorithm.identity, (bit<16>)0, {hdr.ipv4.srcAddr, hdr.ipv4.dstAddr, hdr.tcp.srcPort, hdr.tcp.dstPort, hdr.ipv4.protocol}, (bit<32>)100)"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.value_reg2"]
            },
            {
              "type" : "register_array",
              "value" : "MyEgress.reg2"
            },
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.index_reg2"]
            }
          ],
          "source_info" : {
            "filename" : "test.p4",
            "line" : 173,
            "column" : 171,
            "source_fragment" : "reg2.read(meta.value_reg2, meta.index_reg2)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.value_reg2"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata.value_reg2"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0x0000000000000001"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffffffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "test.p4",
            "line" : 173,
            "column" : 216,
            "source_fragment" : "meta.value_reg2 = meta.value_reg2 + 1"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "MyEgress.reg2"
            },
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.index_reg2"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.value_reg2"]
            }
          ],
          "source_info" : {
            "filename" : "test.p4",
            "line" : 173,
            "column" : 255,
            "source_fragment" : "reg2.write(meta.index_reg2, meta.value_reg2)"
          }
        }
      ]
    },
    {
      "name" : "MyEgress.reg_reset",
      "id" : 9,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.value_reg0"]
            },
            {
              "type" : "register_array",
              "value" : "MyEgress.reg0"
            },
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.index_reg0"]
            }
          ],
          "source_info" : {
            "filename" : "test.p4",
            "line" : 177,
            "column" : 8,
            "source_fragment" : "reg0.read(meta.value_reg0, meta.index_reg0)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.value_reg0"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata.value_reg0"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xfffffffffffffff6"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffffffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "test.p4",
            "line" : 177,
            "column" : 53,
            "source_fragment" : "meta.value_reg0 = meta.value_reg0 - 10"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "MyEgress.reg0"
            },
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.index_reg0"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.value_reg0"]
            }
          ],
          "source_info" : {
            "filename" : "test.p4",
            "line" : 177,
            "column" : 93,
            "source_fragment" : "reg0.write(meta.index_reg0, meta.value_reg0)"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.value_reg1"]
            },
            {
              "type" : "register_array",
              "value" : "MyEgress.reg1"
            },
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.index_reg1"]
            }
          ],
          "source_info" : {
            "filename" : "test.p4",
            "line" : 178,
            "column" : 8,
            "source_fragment" : "reg1.read(meta.value_reg1, meta.index_reg1)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.value_reg1"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata.value_reg1"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xfffffffffffffff6"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffffffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "test.p4",
            "line" : 178,
            "column" : 53,
            "source_fragment" : "meta.value_reg1 = meta.value_reg1 - 10"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "MyEgress.reg1"
            },
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.index_reg1"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.value_reg1"]
            }
          ],
          "source_info" : {
            "filename" : "test.p4",
            "line" : 178,
            "column" : 93,
            "source_fragment" : "reg1.write(meta.index_reg1, meta.value_reg1)"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.value_reg2"]
            },
            {
              "type" : "register_array",
              "value" : "MyEgress.reg2"
            },
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.index_reg2"]
            }
          ],
          "source_info" : {
            "filename" : "test.p4",
            "line" : 179,
            "column" : 8,
            "source_fragment" : "reg2.read(meta.value_reg2, meta.index_reg2)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.value_reg2"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata.value_reg2"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xfffffffffffffff6"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xffffffffffffffff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "test.p4",
            "line" : 179,
            "column" : 53,
            "source_fragment" : "meta.value_reg2 = meta.value_reg2 - 10"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "MyEgress.reg2"
            },
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.index_reg2"]
            },
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.value_reg2"]
            }
          ],
          "source_info" : {
            "filename" : "test.p4",
            "line" : 179,
            "column" : 93,
            "source_fragment" : "reg2.write(meta.index_reg2, meta.value_reg2)"
          }
        }
      ]
    },
    {
      "name" : "MyEgress.retrieve_min",
      "id" : 10,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.value_min"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "?",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata.value_reg0"]
                      },
                      "right" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata.value_min"]
                      },
                      "cond" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "<=",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "userMetadata.value_reg0"]
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["scalars", "userMetadata.value_reg2"]
                          }
                        }
                      }
                    }
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "userMetadata.value_min"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "<=",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata.value_reg0"]
                      },
                      "right" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata.value_reg1"]
                      }
                    }
                  }
                }
              }
            }
          ]
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.value_min"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "?",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata.value_reg1"]
                      },
                      "right" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata.value_min"]
                      },
                      "cond" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "<=",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "userMetadata.value_reg1"]
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["scalars", "userMetadata.value_reg2"]
                          }
                        }
                      }
                    }
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "userMetadata.value_min"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "<=",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata.value_reg1"]
                      },
                      "right" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata.value_reg0"]
                      }
                    }
                  }
                }
              }
            }
          ]
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "userMetadata.value_min"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "?",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "?",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata.value_reg2"]
                      },
                      "right" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata.value_min"]
                      },
                      "cond" : {
                        "type" : "expression",
                        "value" : {
                          "op" : "<=",
                          "left" : {
                            "type" : "field",
                            "value" : ["scalars", "userMetadata.value_reg2"]
                          },
                          "right" : {
                            "type" : "field",
                            "value" : ["scalars", "userMetadata.value_reg1"]
                          }
                        }
                      }
                    }
                  },
                  "right" : {
                    "type" : "field",
                    "value" : ["scalars", "userMetadata.value_min"]
                  },
                  "cond" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "<=",
                      "left" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata.value_reg2"]
                      },
                      "right" : {
                        "type" : "field",
                        "value" : ["scalars", "userMetadata.value_reg0"]
                      }
                    }
                  }
                }
              }
            }
          ]
        }
      ]
    },
    {
      "name" : "test210",
      "id" : 11,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ethernet", "etherType"]
            },
            {
              "type" : "hexstr",
              "value" : "0x1313"
            }
          ],
          "source_info" : {
            "filename" : "include/headers.p4",
            "line" : 6,
            "column" : 26,
            "source_fragment" : "0x1313; ..."
          }
        },
        {
          "op" : "recirculate",
          "parameters" : [
            {
              "type" : "hexstr",
              "value" : "0x1"
            }
          ],
          "source_info" : {
            "filename" : "test.p4",
            "line" : 211,
            "column" : 12,
            "source_fragment" : "recirculate_preserving_field_list(0)"
          }
        }
      ]
    }
  ],
  "pipelines" : [
    {
      "name" : "ingress",
      "id" : 0,
      "source_info" : {
        "filename" : "test.p4",
        "line" : 49,
        "column" : 8,
        "source_fragment" : "MyIngress"
      },
      "init_table" : "node_2",
      "tables" : [
        {
          "name" : "tbl_sketch_count",
          "id" : 0,
          "source_info" : {
            "filename" : "test.p4",
            "line" : 146,
            "column" : 12,
            "source_fragment" : "sketch_count()"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [2],
          "actions" : ["MyIngress.sketch_count"],
          "base_default_next" : "tbl_retrieve_min",
          "next_tables" : {
            "MyIngress.sketch_count" : "tbl_retrieve_min"
          },
          "default_entry" : {
            "action_id" : 2,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_retrieve_min",
          "id" : 1,
          "source_info" : {
            "filename" : "test.p4",
            "line" : 147,
            "column" : 12,
            "source_fragment" : "retrieve_min()"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [4],
          "actions" : ["MyIngress.retrieve_min"],
          "base_default_next" : "tbl_calculate_priority",
          "next_tables" : {
            "MyIngress.retrieve_min" : "tbl_calculate_priority"
          },
          "default_entry" : {
            "action_id" : 4,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_calculate_priority",
          "id" : 2,
          "source_info" : {
            "filename" : "test.p4",
            "line" : 148,
            "column" : 12,
            "source_fragment" : "calculate_priority()"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [5],
          "actions" : ["MyIngress.calculate_priority"],
          "base_default_next" : "tbl_test149",
          "next_tables" : {
            "MyIngress.calculate_priority" : "tbl_test149"
          },
          "default_entry" : {
            "action_id" : 5,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_test149",
          "id" : 3,
          "source_info" : {
            "filename" : "test.p4",
            "line" : 149,
            "column" : 39,
            "source_fragment" : "="
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [7],
          "actions" : ["test149"],
          "base_default_next" : "MyIngress.forwarding",
          "next_tables" : {
            "test149" : "MyIngress.forwarding"
          },
          "default_entry" : {
            "action_id" : 7,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_dequeue_count",
          "id" : 4,
          "source_info" : {
            "filename" : "test.p4",
            "line" : 151,
            "column" : 12,
            "source_fragment" : "dequeue_count()"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [3],
          "actions" : ["MyIngress.dequeue_count"],
          "base_default_next" : "MyIngress.forwarding",
          "next_tables" : {
            "MyIngress.dequeue_count" : "MyIngress.forwarding"
          },
          "default_entry" : {
            "action_id" : 3,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "MyIngress.forwarding",
          "id" : 5,
          "source_info" : {
            "filename" : "test.p4",
            "line" : 131,
            "column" : 10,
            "source_fragment" : "forwarding"
          },
          "key" : [
            {
              "match_type" : "exact",
              "name" : "standard_metadata.ingress_port",
              "target" : ["standard_metadata", "ingress_port"],
              "mask" : null
            }
          ],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 64,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [6, 1, 0],
          "actions" : ["MyIngress.set_egress_port", "MyIngress.drop", "NoAction"],
          "base_default_next" : null,
          "next_tables" : {
            "MyIngress.set_egress_port" : null,
            "MyIngress.drop" : null,
            "NoAction" : null
          },
          "default_entry" : {
            "action_id" : 1,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        }
      ],
      "action_profiles" : [],
      "conditionals" : [
        {
          "name" : "node_2",
          "id" : 0,
          "source_info" : {
            "filename" : "test.p4",
            "line" : 145,
            "column" : 12,
            "source_fragment" : "standard_metadata.instance_type != 4"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "!=",
              "left" : {
                "type" : "field",
                "value" : ["standard_metadata", "instance_type"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x00000004"
              }
            }
          },
          "true_next" : "tbl_sketch_count",
          "false_next" : "tbl_dequeue_count"
        }
      ]
    },
    {
      "name" : "egress",
      "id" : 1,
      "source_info" : {
        "filename" : "test.p4",
        "line" : 162,
        "column" : 8,
        "source_fragment" : "MyEgress"
      },
      "init_table" : "node_11",
      "tables" : [
        {
          "name" : "tbl_sketch_count_0",
          "id" : 6,
          "source_info" : {
            "filename" : "test.p4",
            "line" : 205,
            "column" : 12,
            "source_fragment" : "sketch_count()"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [8],
          "actions" : ["MyEgress.sketch_count"],
          "base_default_next" : "tbl_retrieve_min_0",
          "next_tables" : {
            "MyEgress.sketch_count" : "tbl_retrieve_min_0"
          },
          "default_entry" : {
            "action_id" : 8,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_retrieve_min_0",
          "id" : 7,
          "source_info" : {
            "filename" : "test.p4",
            "line" : 206,
            "column" : 12,
            "source_fragment" : "retrieve_min()"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [10],
          "actions" : ["MyEgress.retrieve_min"],
          "base_default_next" : "node_14",
          "next_tables" : {
            "MyEgress.retrieve_min" : "node_14"
          },
          "default_entry" : {
            "action_id" : 10,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_test210",
          "id" : 8,
          "source_info" : {
            "filename" : "test.p4",
            "line" : 210,
            "column" : 35,
            "source_fragment" : "= TYPE_SYNC; ..."
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [11],
          "actions" : ["test210"],
          "base_default_next" : "tbl_reg_reset",
          "next_tables" : {
            "test210" : "tbl_reg_reset"
          },
          "default_entry" : {
            "action_id" : 11,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_reg_reset",
          "id" : 9,
          "source_info" : {
            "filename" : "test.p4",
            "line" : 212,
            "column" : 12,
            "source_fragment" : "reg_reset()"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [9],
          "actions" : ["MyEgress.reg_reset"],
          "base_default_next" : null,
          "next_tables" : {
            "MyEgress.reg_reset" : null
          },
          "default_entry" : {
            "action_id" : 9,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        }
      ],
      "action_profiles" : [],
      "conditionals" : [
        {
          "name" : "node_11",
          "id" : 1,
          "source_info" : {
            "filename" : "test.p4",
            "line" : 204,
            "column" : 12,
            "source_fragment" : "hdr.ethernet.etherType != TYPE_SYNC"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "!=",
              "left" : {
                "type" : "field",
                "value" : ["ethernet", "etherType"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x1313"
              }
            }
          },
          "true_next" : "tbl_sketch_count_0",
          "false_next" : "node_14"
        },
        {
          "name" : "node_14",
          "id" : 2,
          "source_info" : {
            "filename" : "test.p4",
            "line" : 209,
            "column" : 12,
            "source_fragment" : "meta.value_min >= 10"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : ">=",
              "left" : {
                "type" : "field",
                "value" : ["scalars", "userMetadata.value_min"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x000000000000000a"
              }
            }
          },
          "false_next" : null,
          "true_next" : "tbl_test210"
        }
      ]
    }
  ],
  "checksums" : [],
  "force_arith" : [],
  "extern_instances" : [],
  "field_aliases" : [
    [
      "queueing_metadata.enq_timestamp",
      ["standard_metadata", "enq_timestamp"]
    ],
    [
      "queueing_metadata.enq_qdepth",
      ["standard_metadata", "enq_qdepth"]
    ],
    [
      "queueing_metadata.deq_timedelta",
      ["standard_metadata", "deq_timedelta"]
    ],
    [
      "queueing_metadata.deq_qdepth",
      ["standard_metadata", "deq_qdepth"]
    ],
    [
      "queueing_metadata.qid",
      ["standard_metadata", "qid"]
    ],
    [
      "intrinsic_metadata.priority",
      ["standard_metadata", "priority"]
    ],
    [
      "intrinsic_metadata.ingress_global_timestamp",
      ["standard_metadata", "ingress_global_timestamp"]
    ],
    [
      "intrinsic_metadata.egress_global_timestamp",
      ["standard_metadata", "egress_global_timestamp"]
    ],
    [
      "intrinsic_metadata.mcast_grp",
      ["standard_metadata", "mcast_grp"]
    ],
    [
      "intrinsic_metadata.egress_rid",
      ["standard_metadata", "egress_rid"]
    ]
  ],
  "program" : "test.p4",
  "__meta__" : {
    "version" : [2, 23],
    "compiler" : "https://github.com/p4lang/p4c"
  }
}